# -*- coding: utf-8 -*-
"""machinelearningexp08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mB3CiXUrqtGKyghDYtTdI_UdkvwTCz6g
"""

#About PCA (Principal Component Analysis)
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# example dataset

from sklearn.datasets import load_iris

# Load Iris dataset
iris = load_iris()
X = iris.data  # Features
y = iris.target  # Target

# Example dataset
X = np.array ([[1.0, 3.4],
               [0.5, 0.7],
               [1.2, 1.9],
               [2.1, 2.8],
               [8.3, 7.1],
               [7.2, 1.1],
               [2.2, 1.1],
               [1.0, 10.2],
               [4.2, 1.8],
               [4.3, 4.1],
               [0.2, 0.3]])

X_mean = np.mean(X, axis=0)
X_std = (X- X_mean)/ np.std(X, axis=0)

print("Standorized Dataset: ")
print(X_std)

#step-3
cov_matrix = np.cov(X_std.T)
print("Covariance Matrix: ")
print(cov_matrix)

eigenvalues, eigenvectors = np.linalg.eig(cov_matrix)
print("Eigenvalues: ")
print(eigenvalues)
print("Eigenvectors: ")
print(eigenvectors)

sorted_indices = np.argsort(np.linalg.eigvals(cov_matrix))[::-1]
eigenvalues_sorted = eigenvalues[sorted_indices]
eigenvectors_sorted = eigenvectors[:, sorted_indices]

print("Sorted Eigenvalues: ")
print(eigenvalues_sorted)
print("Sorted Eigenvectors: ")
print(eigenvectors_sorted)
